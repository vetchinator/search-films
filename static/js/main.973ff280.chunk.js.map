{"version":3,"sources":["components/Header/Header.module.css","components/Search/Search.module.css","reportWebVitals.js","components/Header/Header.tsx","api/api.ts","redux/movies-reducer.ts","redux/redux-store.ts","redux/movies-selector.ts","components/common/Preloader/Preloader.tsx","components/Movies/Movie.tsx","components/Search/SearchForm.tsx","components/Movies/Movies.tsx","components/CharacterRow/CharacterRow.tsx","components/Movies/MovieFullDescription.tsx","App.tsx","index.tsx","components/Movies/Movies.module.css","components/CharacterRow/CharacterRow.module.css"],"names":["module","exports","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","Header","className","style","header","apikey","instance","axios","create","baseURL","API","title","type","year","currentPage","get","response","data","id","initialState","loading","movies","errorMessage","totalCountMovies","filter","filmDescription","actions","error","totalResults","page","getFilms","dispatch","a","Response","Search","Error","moviesReducer","state","action","rootReducer","combineReducers","moviesPage","composeEnhancers","window","__REDUX_DEVTOOLS_EXTENSION_COMPOSE__","compose","store","createStore","applyMiddleware","thunkMiddleware","getTotalCountMovies","getfilter","getCurrentPage","getErrorMessage","selectFilmDescription","Preloader","antIcon","LoadingOutlined","fontSize","spin","width","height","textAlign","indicator","Movie","movie","useDispatch","to","imdbID","onClick","replace","movieWrapper","poster","src","Poster","alt","Title","featureMovie","value","Type","Year","React","memo","Option","Select","SearchForm","useSelector","Form","useForm","form","useEffect","setFieldsValue","searchWrapper","onFinish","values","initialValues","Group","compact","Item","name","rules","required","message","placeholder","pattern","htmlType","Movies","history","useHistory","parsed","queryString","location","search","substr","actualPage","actualFilter","Number","query","String","push","length","moviesWrapper","map","Fragment","v1","showQuickJumper","pagination","current","defaultCurrent","onChange","total","pageSize","pageSizeOptions","CharacterRow","row","MovieFullDescription","pathname","getFilmDescription","goBack","LeftOutlined","container","descriptionPoster","Country","Genre","Writer","Director","Production","Actors","Language","Awards","Metascore","Released","DVD","BoxOffice","Rated","Website","Plot","imdbRating","imdbVotes","Runtime","Ratings","rating","Source","Value","App","exact","path","render","MainApp","ReactDOM","document","getElementById"],"mappings":"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","file":"static/js/main.973ff280.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"header\":\"Header_header__1g_MH\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"searchWrapper\":\"Search_searchWrapper__7u6qp\"};","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from \"react\";\r\nimport style from './Header.module.css';\r\n\r\nconst Header: React.FC = () => {\r\n    return (\r\n        <header className={style.header} >\r\n            <h1>Search movies</h1>\r\n        </header>\r\n    )\r\n}\r\n\r\nexport default Header;","import { FilterType } from './../types/type';\r\nimport axios from 'axios';\r\n\r\nconst apikey = '69a7f601';\r\n\r\nexport const instance = axios.create({\r\n    baseURL: \"https://www.omdbapi.com/\",\r\n});\r\n\r\nexport const API = {\r\n    async getFilms({title, type, year}: FilterType, currentPage=1) {\r\n        const response = await instance.get(`?apikey=${apikey}&s=${title}&type=${type}&y=${year}&page=${currentPage}`);\r\n        return response.data;\r\n    },\r\n    async getFilmDescription(id: string) {\r\n        const response = await instance.get(`?apikey=${apikey}&i=${id}&plot=full`);\r\n        return response.data;\r\n    },\r\n}","import { FilterType } from './../types/type';\r\nimport { ThunkAction } from 'redux-thunk';\r\nimport { InferActionsTypes, RootState } from './redux-store';\r\nimport { API } from '../api/api';\r\nimport { movieType } from '../types/type';\r\n\r\nexport type InitialStateType = typeof initialState;\r\ntype ActionTypes = InferActionsTypes<typeof actions>;\r\ntype ThunkType = ThunkAction<Promise<void>, RootState, unknown, ActionTypes>;\r\n\r\nlet initialState = {\r\n    loading: false,\r\n    movies: [] as Array<movieType> ,\r\n    errorMessage: '',\r\n    totalCountMovies: '',\r\n    currentPage: 1,\r\n    filter: {\r\n        title: '',\r\n        year: '',\r\n        type: '',  \r\n    } as FilterType,\r\n    filmDescription: {} as any\r\n\r\n};\r\n\r\nconst moviesReducer = (state = initialState, action: ActionTypes): InitialStateType=> {\r\n    switch (action.type) {\r\n        case 'sm/SEARCH_REQUEST': {\r\n            return { ...state, loading: true }\r\n        }\r\n        case 'sm/SEARCH_REQUEST_SUCCESS': {\r\n            return { ...state, movies: action.movies}\r\n        }\r\n        case 'sm/SEARCH_REQUEST_ERROR': {\r\n            return { ...state, loading: false, errorMessage: action.error }\r\n        }\r\n        case 'sm/SET_TOTAL_COUNT_MOVIES': {\r\n            return { ...state, totalCountMovies: action.totalResults }\r\n        }\r\n        case 'sm/SET_CURRENT_PAGE': {\r\n            return { ...state, currentPage: action.page }\r\n        }\r\n        case 'sm/SET_FILTER': {\r\n            return { ...state, filter: action.filter }\r\n        }\r\n        case 'sm/SET_FILM_DESCRIPTION': {\r\n            return { ...state, filmDescription: action.filmDescription }\r\n        }\r\n        case 'sm/CLEAR_FILM_DESCRIPTION': {\r\n            return { ...state, filmDescription: null }\r\n        }\r\n        default:\r\n            return state;\r\n    }\r\n};\r\n\r\nexport const actions = {\r\n    searchRequest: () => ({ type: \"sm/SEARCH_REQUEST\" } as const), \r\n    searchRequestSuccess: (movies: Array<movieType>) => ({ type: \"sm/SEARCH_REQUEST_SUCCESS\", movies } as const), \r\n    searchRequestError: (error: string) => ({ type: \"sm/SEARCH_REQUEST_ERROR\", error } as const), \r\n    setTotalCountMovies: (totalResults: string) => ({ type: \"sm/SET_TOTAL_COUNT_MOVIES\", totalResults} as const),\r\n    setCurrentPage: (page: number) => ({ type: \"sm/SET_CURRENT_PAGE\", page} as const),\r\n    setFilter: (filter: FilterType) => ({ type: \"sm/SET_FILTER\", filter} as const),\r\n    setFilmDescription: (filmDescription: any) => ({ type: \"sm/SET_FILM_DESCRIPTION\", filmDescription} as const),\r\n    clearFilmDescription: () => ({ type: \"sm/CLEAR_FILM_DESCRIPTION\"} as const),\r\n}\r\n\r\nexport const getFilms =\r\n    (filter: FilterType, page: number): ThunkType =>\r\n    async (dispatch) => {\r\n        dispatch(actions.searchRequestSuccess([]));\r\n        dispatch(actions.searchRequest());\r\n        dispatch(actions.setCurrentPage(page));\r\n        dispatch(actions.setFilter(filter));\r\n\r\n        let data = await API.getFilms(filter, page);\r\n        if (data.Response === \"True\") {\r\n            dispatch(actions.searchRequestError(\"\"));\r\n            dispatch(actions.searchRequestSuccess(data.Search));\r\n            dispatch(actions.setTotalCountMovies(data.totalResults));\r\n        } else {\r\n            dispatch(actions.searchRequestError(data.Error));\r\n        }\r\n    };\r\nexport const getFilmDescription =\r\n    (id: string): ThunkType =>\r\n    async (dispatch) => {\r\n        let data = await API.getFilmDescription(id);\r\n        if (data.Response === 'True') {\r\n            dispatch(actions.setFilmDescription(data));\r\n        } else {\r\n            dispatch(actions.searchRequestError(data.Error));\r\n        }\r\n    };\r\n\r\n    \r\n\r\nexport default moviesReducer;\r\n","import { combineReducers, createStore, applyMiddleware, compose } from 'redux';\r\nimport thunkMiddleware from 'redux-thunk';\r\nimport moviesReducer from './movies-reducer';\r\n\r\n\r\nlet rootReducer = combineReducers({ \r\n    moviesPage: moviesReducer,\r\n    \r\n})\r\n\r\nexport type AppDispatch = typeof store.dispatch;\r\nexport type RootState = ReturnType<typeof rootReducer>;\r\nexport type InferActionsTypes<T> = T extends { [keys: string]: (...args: any[]) => infer U } ? U : never;\r\n\r\n// @ts-ignore\r\nconst composeEnhancers = window.__REDUX_DEVTOOLS_EXTENSION_COMPOSE__ || compose;\r\n\r\nconst store = createStore(rootReducer, composeEnhancers(applyMiddleware(thunkMiddleware)));\r\n\r\n// @ts-ignore\r\nwindow.store = store;\r\n\r\nexport default store;","import { RootState } from './redux-store';\r\n\r\nexport const getTotalCountMovies = (state: RootState) => {\r\n    return state.moviesPage.totalCountMovies;\r\n}\r\n\r\nexport const getfilter = (state: RootState) => {\r\n    return state.moviesPage.filter;\r\n}\r\n\r\nexport const getCurrentPage = (state: RootState) => {\r\n    return state.moviesPage.currentPage;\r\n}\r\n\r\nexport const getErrorMessage = (state: RootState) => {\r\n    return state.moviesPage.errorMessage;\r\n}\r\n\r\nexport const selectFilmDescription = (state: RootState) => {\r\n    return state.moviesPage.filmDescription;\r\n}\r\n\r\n\r\n\r\n","import React from \"react\";\r\nimport \"antd/dist/antd.css\";\r\nimport { Spin } from \"antd\";\r\nimport { LoadingOutlined } from \"@ant-design/icons\";\r\n\r\n\r\n\r\nconst Preloader: React.FC = () => {\r\n    const antIcon = <LoadingOutlined style={{ fontSize: 48 }} spin />;\r\n    return (\r\n    <div style = {{ width: '100%', height: '100%', textAlign: 'center' }}>\r\n        <Spin indicator={antIcon} />\r\n    </div>\r\n    \r\n    )\r\n}\r\n\r\nexport default Preloader;","import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { Link } from 'react-router-dom';\r\nimport { actions } from '../../redux/movies-reducer';\r\nimport { movieType } from '../../types/type';\r\nimport style from './Movies.module.css';\r\n\r\ntype PropType = {movie: movieType}\r\n\r\nconst Movie: React.FC<PropType> = ({ movie }) => {\r\n    const dispatch = useDispatch();\r\n\r\n    const onClick = () => {\r\n        dispatch(actions.clearFilmDescription());\r\n    }\r\n\r\n    return (\r\n        <Link to={ `/film/${movie.imdbID}`} onClick={onClick} replace={true}>\r\n            <div className={style.movieWrapper}>\r\n                <img className={style.poster} src={movie.Poster} alt={`poster ${movie.Title}`} />\r\n                <div className={style.featureMovie}>\r\n                    <div><span className={style.title}>Title: </span> <span className={style.value}>{movie.Title}</span></div>\r\n                    <div><span className={style.title}>Type: </span><span className={style.value}>{movie.Type}</span></div>\r\n                    <div><span className={style.title}>Year: </span><span className={style.value}>{movie.Year}</span></div>\r\n                    <div><span className={style.title}>imdbID: </span><span className={style.value}>{movie.imdbID}</span></div>\r\n                </div>\r\n            </div>\r\n        </Link>\r\n    )\r\n}\r\n\r\nexport default React.memo(Movie);\r\n","import React, { useEffect } from \"react\";\r\nimport style from './Search.module.css';\r\nimport { useDispatch, useSelector } from \"react-redux\";\r\nimport { getFilms } from \"../../redux/movies-reducer\";\r\nimport 'antd/dist/antd.css';\r\nimport { Form, Input, Button, Select } from 'antd';\r\nimport { getfilter } from \"../../redux/movies-selector\";\r\nconst { Option } = Select;\r\n\r\nconst SearchForm: React.FC = () => {\r\n    const dispatch = useDispatch();\r\n    const filter = useSelector(getfilter);\r\n    \r\n    const [form] = Form.useForm();\r\n\r\n    useEffect(() => {\r\n        form.setFieldsValue({\r\n            title: filter.title,\r\n            year: filter.year,\r\n            type: filter.type,\r\n        });\r\n    }, [filter, form]);\r\n\r\n    const onFinish = (values: any) => {\r\n        dispatch(getFilms(values, 1));\r\n    };\r\n\r\n    return (\r\n        <div className={style.searchWrapper}>\r\n            <Form onFinish={onFinish} \r\n            form={form}\r\n                initialValues={{\r\n                    title: filter.title,\r\n                    year: filter.year,\r\n                    type: filter.type,\r\n                }}\r\n            >\r\n                <Input.Group compact>\r\n                    <Form.Item name=\"title\"\r\n                        rules={[\r\n                            {\r\n                                required: true,\r\n                                message: 'Please input title!',\r\n                            },\r\n                        ]}>\r\n                        <Input placeholder=\"title film\" />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"year\"\r\n                        rules={[\r\n                            {\r\n                                pattern: /^\\d+$/,\r\n                                message: 'Please enter year',\r\n                            }\r\n                            ]}>\r\n                        <Input placeholder='year'\r\n                         />\r\n                    </Form.Item>\r\n                    <Form.Item name=\"type\">\r\n                        <Select style={{ width: '120px'}}>\r\n                        <Option value=\"\">All</Option>\r\n                            <Option value=\"movie\">Movie</Option>\r\n                            <Option value=\"series\">Series</Option>\r\n                            <Option value=\"episode\">Episode</Option>\r\n                        </Select>\r\n                    </Form.Item>\r\n                    <Form.Item>\r\n                        <Button type=\"primary\" htmlType=\"submit\">\r\n                            Search\r\n                        </Button>\r\n                    </Form.Item>\r\n                </Input.Group>\r\n            </Form>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default SearchForm;","import { Pagination } from 'antd';\r\nimport React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { RootState } from '../../redux/redux-store';\r\nimport { getCurrentPage, getErrorMessage, getfilter, getTotalCountMovies } from '../../redux/movies-selector';\r\nimport { movieType } from '../../types/type';\r\nimport Preloader from '../common/Preloader/Preloader';\r\nimport Movie from './Movie';\r\nimport style from './Movies.module.css';\r\nimport { getFilms } from '../../redux/movies-reducer';\r\nimport * as queryString from 'querystring';\r\nimport { useHistory } from 'react-router';\r\nimport SearchForm from '../Search/SearchForm';\r\nimport { v1 } from 'uuid';\r\n\r\ntype QueryType = {\r\n    title?: string | undefined,\r\n    year?: string | undefined,\r\n    type?: 'movie' | 'series' | 'episode',\r\n    page?: string | undefined\r\n}\r\n\r\nconst Movies: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n    const filter = useSelector(getfilter);\r\n    const currentPage = useSelector(getCurrentPage);\r\n\r\n    useEffect(() => {\r\n        const parsed = queryString.parse(history.location.search.substr(1)) as QueryType;\r\n\r\n        let actualPage = currentPage;\r\n        let actualFilter = filter;\r\n\r\n        if (!!parsed.page) { actualPage = Number(parsed.page) };\r\n        if (!!parsed.title) { actualFilter = { ...actualFilter, title: parsed.title } };\r\n        if (!!parsed.year) { actualFilter = { ...actualFilter, year: parsed.year } };\r\n        if (!!parsed.type) { actualFilter = { ...actualFilter, type: parsed.type } };\r\n        if (actualFilter.title) {\r\n            dispatch(getFilms(actualFilter, actualPage));\r\n        }\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [])\r\n\r\n    useEffect(() => {\r\n        const query: QueryType = {};\r\n        if (!!filter.title) query.title = filter.title;\r\n        if (!!filter.year) query.year = filter.year;\r\n        if (!!filter.type) query.type = filter.type;\r\n        if (currentPage !== 1) query.page = String(currentPage);\r\n        history.push({\r\n            search: queryString.stringify(query),\r\n        })\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }, [filter, currentPage])\r\n\r\n    let movies: Array<movieType> | null = useSelector((state: RootState) => state.moviesPage.movies);\r\n    let loading = useSelector((state: RootState) => state.moviesPage.loading);\r\n    const totalCountMovies = Number(useSelector(getTotalCountMovies));\r\n    \r\n    \r\n    const errorMessage = useSelector(getErrorMessage);\r\n\r\n    const onChange = (page: number) => {\r\n        dispatch(getFilms(filter, page));\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <SearchForm />\r\n            {loading ? <Preloader /> : <div>\r\n                {movies.length !==0 && <div className={style.moviesWrapper}>\r\n                    {movies.map((movie) => (\r\n                        <React.Fragment key={v1()} >\r\n                            <Movie movie={movie} />\r\n                        </React.Fragment>\r\n                    ))}\r\n                </div>}\r\n                <div style={{ textAlign: 'center' }}>\r\n                    <Pagination showQuickJumper={true} className={style.pagination} current={currentPage} defaultCurrent={1} onChange={onChange} total={totalCountMovies} pageSize={10} pageSizeOptions={[]} />\r\n                </div>\r\n            </div>}\r\n            {errorMessage && <div style={{ textAlign: 'center' }}>{errorMessage}</div>}\r\n        </>\r\n    )\r\n}\r\n\r\nexport default React.memo(Movies);\r\n","import React from 'react';\r\nimport style from './CharacterRow.module.css';\r\n\r\ntype PropType = {\r\n    title: string | undefined,\r\n    value: string,\r\n}\r\n\r\nconst CharacterRow: React.FC<PropType> = ({ title, value }) => {\r\n\r\n    // if(!title) {\r\n    //     return\r\n    // }\r\n\r\n    return (\r\n        \r\n        <div className={style.row}>\r\n            <div className={style.title}>\r\n                {title}\r\n            </div>\r\n            <div className={style.value}>\r\n                {value}\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n\r\nexport default CharacterRow;","import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getFilmDescription } from '../../redux/movies-reducer';\r\nimport { selectFilmDescription } from '../../redux/movies-selector';\r\nimport { useHistory } from 'react-router';\r\nimport CharacterRow from '../CharacterRow/CharacterRow';\r\nimport { Button } from 'antd';\r\nimport { LeftOutlined } from '@ant-design/icons';\r\nimport style from './Movies.module.css';\r\nimport { FilmDescType } from '../../types/type';\r\nimport Preloader from '../common/Preloader/Preloader';\r\n\r\nconst MovieFullDescription: React.FC = () => {\r\n\r\n    const dispatch = useDispatch();\r\n    const history = useHistory();\r\n\r\n    useEffect(() => {\r\n        const id = String(history.location.pathname.substr(6));\r\n        dispatch(getFilmDescription(id));\r\n        // eslint-disable-next-line react-hooks/exhaustive-deps \r\n    }, []);\r\n\r\n    const filmDescription: FilmDescType = useSelector(selectFilmDescription);\r\n\r\n    const goToBack = () => {\r\n        history.goBack();\r\n    }\r\n\r\n    if (!filmDescription) {\r\n        return <Preloader />\r\n    }\r\n\r\n    return (\r\n        <div>\r\n            <div>\r\n                <div>\r\n                    <Button onClick={goToBack}> <LeftOutlined /> Back</Button>\r\n                </div>\r\n                <div className={style.container}>\r\n                    <div className={style.descriptionPoster}>\r\n                        <img src={filmDescription.Poster} alt={`poster ${filmDescription.Title}`} />\r\n                    </div>\r\n                    <div>\r\n                        <CharacterRow title='Title' value={filmDescription.Title} />\r\n                        <CharacterRow title='Year' value={filmDescription.Year} />\r\n                        <CharacterRow title='Country' value={filmDescription.Country} />\r\n                        <CharacterRow title='Genre' value={filmDescription.Genre} />\r\n                        <CharacterRow title='Writer' value={filmDescription.Writer} />\r\n                        <CharacterRow title='Director' value={filmDescription.Director} />\r\n                        <CharacterRow title='Production' value={filmDescription.Production} />\r\n                        <CharacterRow title='Director' value={filmDescription.Director} />\r\n                        <CharacterRow title='Actors' value={filmDescription.Actors} />\r\n                        <CharacterRow title='Language' value={filmDescription.Language} />\r\n                        <CharacterRow title='Awards' value={filmDescription.Awards} />\r\n                        <CharacterRow title='Metascore' value={filmDescription.Metascore} />\r\n                        <CharacterRow title='Released' value={filmDescription.Released} />\r\n                        <CharacterRow title='Type' value={filmDescription.Type} />\r\n                        <CharacterRow title='DVD' value={filmDescription.DVD} />\r\n                        <CharacterRow title='BoxOffice' value={filmDescription.BoxOffice} />\r\n                        <CharacterRow title='Rated' value={filmDescription.Rated} />\r\n                        <CharacterRow title='Website' value={filmDescription.Website} />\r\n                        <CharacterRow title='Plot' value={filmDescription.Plot} />\r\n                        <CharacterRow title='imdbID' value={filmDescription.imdbID} />\r\n                        <CharacterRow title='imdbRating' value={filmDescription.imdbRating} />\r\n                        <CharacterRow title='imdbVotes' value={filmDescription.imdbVotes} />\r\n                        <CharacterRow title='Runtime' value={filmDescription.Runtime} />\r\n\r\n                        {filmDescription.Ratings && filmDescription.Ratings.map((rating) => (\r\n                            <React.Fragment key={rating.Source}>\r\n                                <CharacterRow title={rating.Source} value={rating.Value} />\r\n                            </React.Fragment>))}\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div >\r\n    )\r\n}\r\n\r\nexport default React.memo(MovieFullDescription);\r\n","import './App.css';\nimport { HashRouter, Route, Switch } from \"react-router-dom\";\nimport Header from './components/Header/Header';\nimport { Provider } from \"react-redux\";\nimport store from \"./redux/redux-store\";\nimport React from 'react';\nimport Movies from './components/Movies/Movies';\nimport MovieFullDescription from './components/Movies/MovieFullDescription';\n\nconst App: React.FC = () => {\n    return (\n        <div className=\"container\">\n            <Header />\n            <div className=\"content\">\n                    <Switch>\n                        <Route exact path=\"/\" render={() => <Movies />} />\n                        <Route path=\"/film/:title\" render={() => <MovieFullDescription />} />  \n                    </Switch>\n                    \n            </div>\n        </div>\n    );\n}\n\nconst MainApp: React.FC = () => {\n    return (\n        <HashRouter>\n            <Provider store={store}>\n                <App />\n            </Provider>\n        </HashRouter>\n    );\n}\n\nexport default MainApp;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport reportWebVitals from './reportWebVitals';\nimport MainApp from \"./App\";\n\nReactDOM.render(<MainApp />, document.getElementById('root'));\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n","// extracted by mini-css-extract-plugin\nmodule.exports = {\"moviesWrapper\":\"Movies_moviesWrapper__2KVWS\",\"movieWrapper\":\"Movies_movieWrapper__11WeW\",\"container\":\"Movies_container__3eqcq\",\"featureMovie\":\"Movies_featureMovie__1quTg\",\"title\":\"Movies_title__HwXno\",\"value\":\"Movies_value__l7Kqh\",\"poster\":\"Movies_poster__2bkHM\",\"descriptionPoster\":\"Movies_descriptionPoster__n3Y6V\",\"pagination\":\"Movies_pagination__2oIMO\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"row\":\"CharacterRow_row__OTVB0\",\"title\":\"CharacterRow_title__31UoH\",\"value\":\"CharacterRow_value__Cuc02\"};"],"sourceRoot":""}